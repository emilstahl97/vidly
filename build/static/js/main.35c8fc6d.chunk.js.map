{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/common/pagination.jsx","components/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","services/userService.js","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","movieUrl","id","concat","getMovie","movieId","http","saveMovie","movie","_id","body","Object","objectSpread","getGenres","ListGroup","props","items","textProperty","valueProperty","selectedItem","onItemSelect","react_default","a","createElement","className","map","item","onClick","key","defaultProps","Like","classes","liked","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","_this","order","onSort","renderSortIcon","column","_this2","this","columns","label","Component","TableBody","renderCell","content","_","createKey","_this$props","data","table","_ref","tableHeader","tableBody","tokenKey","_callee","email","password","regenerator_default","wrap","_context","prev","next","sent","localStorage","setItem","stop","getJwt","getItem","authService","login","_x","_x2","_login","apply","arguments","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Link","to","title","like","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","common_table","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","t0","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","_this$state","allMovies","filtered","toLowerCase","startsWith","genre_id","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","count","_this$state2","_this$getPagedData","listGroup","marginBottom","searchBox","moviesTable","pagination","Input","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","disabled","common_select","common_input","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","LoginForm","username","location","window","from","pathname","Redirect","Logout","ProtectedRoute","component","render","Route","RegisterForm","App","lib","navBar","Switch","protectedRoute","components_movies","exact","Boolean","hostname","process","REACT_APP_NAME","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35c8fc6d.chunk.js","sourcesContent":["function init() {}\nfunction log(error) {\n  console.log(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/movies\";\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n\n  return http.post(apiEndpoint, movie);\n}\n\nexport function deleteMovie(movieId) {\n  return http.delete(movieUrl(movieId));\n}\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport function getGenres() {\n  return http.get(apiUrl + \"/genres\");\n}\n","import React, { Component } from \"react\";\n\nconst ListGroup = props => {\n  const {\n    items,\n    textProperty,\n    valueProperty,\n    selectedItem,\n    onItemSelect\n  } = props;\n\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\n\nexport default ListGroup;\n","import React, { Component } from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React, { Component } from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst table = ({ columns, sortColumn, data, onSort }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default table;\n","import jwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\nimport auth from \"../services/authService\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: movie => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      )\n    }\n  ];\n  deleteColumn = {\n    key: \"delete\",\n    content: movie => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className=\"btn btn-danger btn-sm\"\n      >\n        Delete\n      </button>\n    )\n  };\n  constructor() {\n    super();\n    const user = auth.getCurrentUser();\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\n  }\n\n  render() {\n    const { movies, sortColumn, onSort } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        onSort={onSort}\n        sortColumn={sortColumn}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = props => {\n  const { itemsCount, pageSize, onPageChange, currentPage } = props;\n  console.log(currentPage);\n\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport SearchBox from \"./searchBox\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter(m => m._id != movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === \"404\")\n        toast.error(\"This movie has already been deleted\");\n    }\n    this.setState({ movies: originalMovies });\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies\n    } = this.state;\n\n    let filtered = allMovies;\n\n    if (searchQuery)\n      filtered = allMovies.filter(m =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter(m => m.genre_id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n\n    if (count === 0) return <p> There are no movies in the database</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link\n              to=\"/movies/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\"> {error} </div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    //call the server\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { errors, data } = this.state;\n    return (\n      <Input\n        name={name}\n        type={type}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\"\n    },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\")\n  };\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\n            Movies\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n            Customers\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n            Rentals\n          </NavLink>\n          {!user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\n                Register\n              </NavLink>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                {user.name}\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                Logout\n              </NavLink>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from \"../services/authService\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.username, data.password);\n\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport auth from \"../services/authService\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/\";\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../../services/authService\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!auth.getCurrentUser())\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/users\";\n\nexport function register(user) {\n  return http.post(apiEndpoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name\n  });\n}\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .email()\n      .label(\"Username\"),\n\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label(\"Username\"),\n\n    name: Joi.string()\n      .required()\n      .label(\"Name\")\n  };\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport MovieForm from \"./components/movieForm\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport RegisterForm from \"./components/registerForm\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login/\" component={LoginForm} />\n            <Route path=\"/logout/\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconsole.log(\"superman\", process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}